/* 
Could use variables to reduce code redundancy but I don't usually due to the incomplete browser support

:root {
  --blue: #00698F;
  --white: #ffffff;
}

header {
  background-color: var(--blue);
  color: var(--white);
} 
*/



/*
Setup CSS resets to make the rest of the layout easier / consistent!
*/

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

/* Set default link styles */
a:not([class]){
  text-decoration: inherit;
}
a[class]{
  text-decoration: none;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Remove animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce){
  * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
  }
}

/* Define fonts */
/* Normally would store custom fonts in the theme and import like this, but to save all the file conversions I'll just import for this example */ 
/* @font-face {
  font-family: "raleway-variable";
  src: url("fonts/raleway-variable.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
} 
 */
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@500&display=swap');



/* Set core body defaults */
body {
  font-family: "Raleway", -apple-system, BlinkMacSystemFont, "Segoe UI", "Open Sans";
  font-weight: 300;
  min-height: 100vh;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeSpeed;
  line-height: 1.3;
  font-display: swap;
  background-color: #fff;
  color: #00698F;
}


header {
  color: #fff;
}
.background {
  background-color: #00698F;
}
.flex-container {
  display: flex;
  justify-content: space-between;
}
.pad {
  padding: 2em 7em;
}
.header-content {
  z-index: 2;
  position: relative;
}
.slanted {
  /* I thought it would improve pagespeed just using a background colour instead of triangle image */
  transform: skewY(3deg);
  height: 13vw;
  margin-top: -8vw;
  z-index: 1;
}
nav.flex-container {
  width: 31px;
  height: 26px;
  flex-direction: column;

  justify-content: center;
  position: relative;
}
.line {
  display: block;
  width: 31px;
  height: 2px;
  border-radius: 2px;
  background-color: #fff;

  position: absolute;
  transition: transform 0.25s, opacity 0.35s;
}
.line-1 {
  transform: translateY(-11px);
}
.line-3 {
  transform: translateY(11px);
}
nav:is(:hover, :focus) {
  cursor: pointer;
}
nav:is(:hover, :focus) .line-1 {
  transform: rotate(45deg);
}
nav:is(:hover, :focus) .line-3 {
  transform: rotate(-45deg);
}
nav:is(:hover, :focus) .line-2 {
  transform: translateX(31px);
  opacity: 0;
}

h1, h2 {
  max-width: 72%;
  font-weight: 300;
  font-size: 2.75rem;
}
h1 {
  text-align: right;
  margin: 2em 0 0 auto;
}
h3 {
  font-size: 2rem;
  font-weight: 400;
  margin: 0.5em 0
}
.main-content {
  margin-top: 2em;
}
p,
button {
  font-size: 1.4rem;
  font-weight: 400;
  margin: 1.25em 0 2em;
  line-height: 1.4;
}
h3 + p {
  margin: 0 0 1em;
}
.story {
  flex-direction: column;
  width: 31.5%;
}
.image-container {
  width: 100%;
  aspect-ratio: 370 / 200; /* For browsers where this is unsupported (Safari) need to calc height instead - or use WP custom image sizes */
  overflow: hidden;
}
.image-container img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  transition: transform .5s ease;
  /* Clearly we would resize the large src images in a real project / use srcset options - otherwise this will slow the pagespeed when we're only showing thumbnail sizes */

  /* defaults for image 1 */
  transform: scale(1.25);
  object-position: 225% center;
}
.story:nth-of-type(2) img {
  transform: scale(1.1);
  object-position: center 25%;
}
.story:last-child img {
  transform: scale(1.125);
  object-position: center 57%;
}
.image-container:hover img {
  transform: scale(1.5); 
  filter: saturate(150%) brightness(200%);
  cursor: pointer;
}
button {
  cursor: pointer;
  width: max-content;
  color: #fff;
  padding: 0.25em 1em;
  margin: 0;
  
  position: relative;
  background: none;
  border: 1px solid #00698F;
}
/* Button hover animations */
button:is(:hover, :focus) {
  color: #00698F;
}
button::after {
  position: absolute;
  content: '';
  inset: 0;
  z-index: -1;
  background-color: #00698F;
  transform-origin: left;
  transform: scaleX(1);
  transition: transform 200ms;
}
button:is(:hover, :focus)::after {
  transform: scaleX(0);
}